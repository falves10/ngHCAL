# any line STARTING with '#' is a comment

# start each definition with <start_definition> and end with <end_definition>, each on it's own line
# every definition requires a name and type at minimum

# blocks must be declared AFTER name and type

# to fill a histogram, use the <fill> tag followed by the arguments to ->Fill()
      # example: <fill> (nTS, adc);

###########################################
<start_definition>
name = "General"
type = null

loop_vars = <start_block>
  int pdac2poff[64] = {0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31};
  int adcped = 3;
  float qped = adc2fC_QIE10_refl[ adcped ];
  bool corrupt;
<end_block>

pre_loop = <start_block>
  global.corrupt = 0;
  for (int iTS=0 ; iTS<10 ; iTS++) { 
    if (digis[iTS].le_tdc() == 0) {
      global.corrupt = 1;
    }
  }

<end_block>

loop = <start_block>
  global.adcped = global.adcped;
  global.qped = global.qped;
  int tTS = digis.samples();
  tTS = tTS;
  int adc = digis[nTS].adc();
  adc = adc;
  int le_tdc = digis[nTS].le_tdc();
  le_tdc = le_tdc;
  int te_tdc = digis[nTS].te_tdc();
  te_tdc = te_tdc;
  int capid = digis[nTS].capid();
  capid = capid;
  int soi = digis[nTS].soi();
  soi = soi;
  float charge = adc2fC_QIE10_refl[ adc ] + 14.45;
  charge = charge;
  float acharge = charge - global.qped;
  acharge = acharge;
<end_block>

<end_definition>
###########################################
<start_suite>
name = "CapIDtesting"
code = 1
null = "General"
TH1F_perEV = "CapIDrot_EV" , "CapAllign_EV"
TH1F_perCH = "CapIDrot_CH" , "CapAllign_CH"
TH2F_perCH = "CIDvsTS_CH"
TH2F_perEV = "CIDvsTS_EV"
logger = "BadData_CH" , "ZeroData_CH"
<end_suite>
###########################################
<start_definition>
name = "CIDvsTS_CH"
type = TH2F_perCH
nbinsx = tTS
lowx = -0.5
highx = (float)tTS - (float)0.5
titlex = "TS"
nbinsy = 4
lowy = -0.5
highy = 3.5
titley = "CID"

loop_vars = <start_block>
  bool zero_event_CIDvsTS_CH;
<end_block>

pre_loop = <start_block>
  global.zero_event_CIDvsTS_CH = 0;
  for (int iTS=1 ; iTS<10 ; iTS++) { 
    if (digis[iTS].le_tdc() == 0) {
      global.zero_event_CIDvsTS_CH = 1;
    }
  }
<end_block>

loop = <start_block>
  if (global.zero_event_CIDvsTS_CH == 0) {
    if (_event_num > 2) {
      <fill_perCH> ( nTS, capid );
    }
  }
<end_block>

<end_definition>
##########################################
<start_definition>
name = "CIDvsTS_EV"
type = TH2F_perEV
nbinsx = tTS
lowx = -0.5
highx = (float)tTS - (float)0.5
titlex = "TS"
nbinsy = 4
lowy = -0.5
highy = 3.5
titley = "CID"

loop_vars = <start_block>
  bool zero_event_CIDvsTS_EV;
<end_block>

pre_loop = <start_block>
  global.zero_event_CIDvsTS_EV = 0;
  for (int iTS=1 ; iTS<10 ; iTS++) { 
    if (digis[iTS].le_tdc() == 0) {
      global.zero_event_CIDvsTS_EV = 1;
    }
  }
<end_block>

loop = <start_block>
  if (global.zero_event_CIDvsTS_EV == 0) {
    if (_event_num > 2) {
      <fill_perEV> ( nTS, capid );
    }
  }
<end_block>

<end_definition>
##########################################
<start_definition>
name = "CapIDrot_CH"
type = TH1F_perCH
nbinsx = 7
lowx = -3.5
highx = 3.5
titlex = "CID(N) - (CID(N-1)+1)%4"

loop_vars = <start_block>
  bool zero_event_CapIDrot_CH;
<end_block>

pre_loop = <start_block>
  global.zero_event_CapIDrot_CH = 0;
  for (int iTS=1 ; iTS<10 ; iTS++) { 
    if (digis[iTS].le_tdc() == 0) {
      global.zero_event_CapIDrot_CH = 1;
    }
  }
<end_block>

loop = <start_block>  
  if (nTS != 0) {
    if (global.zero_event_CapIDrot_CH == 0) {
      if (_event_num > 2) {
        <fill_perCH> (capid - (digis[nTS-1].capid()+1)%4 );
      }
    }
  }
<end_block>

<end_definition>
##########################################
<start_definition>
name = "CapIDrot_EV"
type = TH1F_perEV
nbinsx = 7
lowx = -3.5
highx = 3.5
titlex = "CID(N) - (CID(N-1)+1)%4"

loop_vars = <start_block>
  bool zero_event_CapIDrot_EV;
<end_block>

pre_loop = <start_block>
  global.zero_event_CapIDrot_EV = 0;
  for (int iTS=1 ; iTS<10 ; iTS++) { 
    if (digis[iTS].le_tdc() == 0) {
      global.zero_event_CapIDrot_EV = 1;
    }
  }
<end_block>

loop = <start_block>  
  if (nTS != 0) {
    if (global.zero_event_CapIDrot_EV == 0) {
      if (_event_num > 2) {
        <fill_perEV> (capid - (digis[nTS-1].capid()+1)%4 );
      }
    }
  }
<end_block>

<end_definition>
##########################################
<start_definition>
name = "CapAllign_CH"
type = TH1F_perCH
nbinsx = 7
lowx = -3.5
highx = 3.5
titlex = "CID - CID(ch0)"

loop_vars = <start_block>
  int* ch0_cid_ch = new int[10];
  bool zero_event_CapAllign_CH;
<end_block>

pre_loop = <start_block>
  global.zero_event_CapAllign_CH = 0;
  for (int iTS=1 ; iTS<10 ; iTS++) { 
    if (digis[iTS].le_tdc() == 0) {
      global.zero_event_CapAllign_CH = 1;
    }
  }
<end_block>


loop = <start_block>   
  if (nCH == 0) {
    global.ch0_cid_ch[nTS] = digis[nTS].capid();
  }
  if (global.zero_event_CapAllign_CH == 0) {
    if (_event_num > 2) {
      <fill_perCH> (capid - global.ch0_cid_ch[nTS]);
    }
  }
<end_block>

<end_definition>
##########################################
<start_definition>
name = "CapAllign_EV"
type = TH1F_perEV
nbinsx = 7
lowx = -3.5
highx = 3.5
titlex = "CID - CID(ch0)"

loop_vars = <start_block>
  int* ch0_cid_ev = new int[10];
  bool zero_event_CapAllign_EV;
<end_block>

pre_loop = <start_block>
  global.zero_event_CapAllign_EV = 0;
  for (int iTS=1 ; iTS<10 ; iTS++) { 
    if (digis[iTS].le_tdc() == 0) {
      global.zero_event_CapAllign_EV = 1;
    }
  }
<end_block>


loop = <start_block>   
  if (nCH == 0) {
    global.ch0_cid_ev[nTS] = digis[nTS].capid();
  }
  if (global.zero_event_CapAllign_EV == 0) {
    if (_event_num > 2) {
      <fill_perEV> (capid - global.ch0_cid_ev[nTS]);
    }
  }
<end_block>

<end_definition>
##########################################
<start_definition>
name = "BadData_CH"
type = logger
log_file = "../log/bad_data.log"

loop_vars = <start_block>
  bool bad_flag;
<end_block>

pre_loop = <start_block>
  DetId detid_loc = digis.detid();
  HcalDetId hcaldetid_loc = HcalDetId(detid_loc);
  int iEta_loc = hcaldetid_loc.ieta();
  int iPhi_loc = hcaldetid_loc.iphi();
  int Depth_loc = hcaldetid_loc.depth();

  global.bad_flag = 0;
  bool zero_event_flag = 0;
  for (int iTS=1 ; iTS<10 ; iTS++) { 
    if ( (digis[iTS].capid() - (digis[iTS-1].capid()+1)%4) != 0 ) {
      global.bad_flag = 1;
    }
    if (digis[iTS].le_tdc() == 0) {
      zero_event_flag = 1;
    }
  }
  if (zero_event_flag == 1){
    global.bad_flag = 0;
  }
  if (global.bad_flag == 1) {
     <log> "#############" << endl;
     <log> "# BAD EVENT" << endl;
     <log> "# HF: " << Depth_loc << endl;
     <log> "# Slot: " << iPhi_loc << endl;
     <log> "# QIE: " << iEta_loc << endl;
     <log> "# nEV:" << _event_num << endl;
     <log> "#############" << endl;
    for (int iTS=0 ; iTS<10 ; iTS++) {
      if (( (digis[iTS].capid() - (digis[iTS-1].capid()+1)%4) != 0 ) && ( iTS != 0 )) {
         <log> "TS:" << iTS << "  --  CID " << digis[iTS].capid() << "  --  ADC " << digis[iTS].adc() << "  --  leTDC " << digis[iTS].le_tdc() << "  --  teTDC " << digis[iTS].te_tdc() << "  <<<<<<<<" << endl;
      }
      else {
         <log> "TS:" << iTS << "  --  CID " << digis[iTS].capid() << "  --  ADC " << digis[iTS].adc() << "  --  leTDC " << digis[iTS].le_tdc() << "  --  teTDC " << digis[iTS].te_tdc() << endl;
      }
    }
     <log> "#############" << endl;
  }
<end_block>

<end_definition>
##########################################
<start_definition>
name = "ZeroData_CH"
type = logger
log_file = "../log/zero_data.log"

pre_loop = <start_block>
  DetId detid_loc_z = digis.detid();
  HcalDetId hcaldetid_loc_z = HcalDetId(detid_loc_z);
  int iEta_loc_z = hcaldetid_loc_z.ieta();
  int iPhi_loc_z = hcaldetid_loc_z.iphi();
  int Depth_loc_z = hcaldetid_loc_z.depth();

  bool zero_event_flag_z = 0;
  for (int iTS=1 ; iTS<10 ; iTS++) { 
    if (digis[iTS].le_tdc() == 0) {
      zero_event_flag_z = 1;
    }
  }
  if (zero_event_flag_z == 1) {
     <log> "#############" << endl;
     <log> "# BAD EVENT" << endl;
     <log> "# HF: " << Depth_loc_z << endl;
     <log> "# Slot: " << iPhi_loc_z << endl;
     <log> "# QIE: " << iEta_loc_z << endl;
     <log> "# nEV:" << _event_num << endl;
     <log> "#############" << endl;
     for (int iTS=0 ; iTS<10 ; iTS++) {
        <log> "TS:" << iTS << "  --  CID " << digis[iTS].capid() << "  --  ADC " << digis[iTS].adc() << "  --  leTDC " << digis[iTS].le_tdc() << "  --  teTDC " << digis[iTS].te_tdc() << endl;
     }
     <log> "#############" << endl;
  }
<end_block>

<end_definition>
##########################################
<start_suite>
name = "PedestalData"
code = 2
null = "General"
TH1F_perEV = "QSum_ped_EV" , "ADC_ped_EV" , "Qav_ped_EV"
TH1F_perCH = "QSum_ped_CH" , "ADC_ped_CH"
TH2F_perEV = "ADCvsTS_ped_EV" , "Qav_ped_CID" , "ADC_ped_CID"
TH2F_perCH = "ADCvsTS_ped_CH" 
<end_suite>
###########################################
<start_definition>
name = "ADC_ped_EV"
type = TH1F_perEV
nbinsx = 25
lowx = -0.5
highx = 24.5
titlex = "ADC"

loop = <start_block>
  <fill_perEV> ( adc );
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADC_ped_CH"
type = TH1F_perCH
nbinsx = 25
lowx = -0.5
highx = 24.5
titlex = "ADC"

loop = <start_block>
  <fill_perCH> ( adc );
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_ped_CH"
type = TH2F_perCH
nbinsx = tTS
lowx = -0.5
highx = (float)tTS - (float)0.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  <fill_perCH> ( nTS, adc );
<end_block>

<end_definition>
##########################################
<start_definition>
name = "ADCvsTS_ped_EV"
type = TH2F_perEV
nbinsx = tTS
lowx = -0.5
highx = (float)tTS - (float)0.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  <fill_perEV> ( nTS, adc );
<end_block>

<end_definition>
##########################################
<start_definition>
name = "QSum_ped_EV"
type = TH1F_perEV
nbinsx = 50
lowx = 0
highx = 500
titlex = "Integrated Charge (fC)"

loop_vars = <start_block>
  float qsum_ped_EV;
<end_block>

pre_loop = <start_block>
  global.qsum_ped_EV = 0;
<end_block>

loop = <start_block>
  global.qsum_ped_EV += (charge - global.qped);
<end_block>

post_loop = <start_block>
  <fill_perEV> ( global.qsum_ped_EV );
<end_block>

<end_definition>
##########################################
<start_definition>
name = "QSum_ped_CH"
type = TH1F_perCH
nbinsx = 50
lowx = 0
highx = 500
titlex = "Integrated Charge (fC)"

loop_vars = <start_block>
  float qsum_ped_CH;
<end_block>

pre_loop = <start_block>
  global.qsum_ped_CH = 0;
<end_block>

loop = <start_block>
  global.qsum_ped_CH += (charge - global.qped);
<end_block>

post_loop = <start_block>
  <fill_perCH> ( global.qsum_ped_CH );
<end_block>

<end_definition>
##########################################
<start_definition>
name = "Qav_ped_EV"
type = TH1F_perEV
nbinsx = 50
lowx = 0
highx = 50
titlex = "Q (fC)"

loop_vars = <start_block>
  float qav_ped_EV;
<end_block>

pre_loop = <start_block>
  global.qav_ped_EV = 0;
<end_block>

loop = <start_block>
  global.qav_ped_EV += (charge - global.qped);
<end_block>

post_loop = <start_block>
  <fill_perEV> ( global.qsum_ped_EV / float(digis.samples()) );
<end_block>

<end_definition>
###########################################
<start_definition>
name = "Qav_ped_CID"
type = TH2F_perEV
nbinsx = 4
lowx = -0.5
highx = 3.5
titlex = "CID"
nbinsy = 50
lowy = 0
highy = 15
titley = "Q (fC)"

loop_vars = <start_block>
  float* qav_ped_CID = new float[4];
  int* cid_count  = new int[4];
<end_block>

pre_loop = <start_block>
  for (int jj=0 ; jj < 4; jj++){
    global.qav_ped_CID[jj] = 0;
    global.cid_count[jj] = 0;	
  }   
<end_block>

loop = <start_block>
  global.qav_ped_CID[capid] += (charge - global.qped);
  global.cid_count[capid] += 1;
<end_block>

post_loop = <start_block>
  for (int jj=0 ; jj < 4; jj++){
    <fill_perEV> ( jj , (global.qav_ped_CID[jj] / global.cid_count[jj]) );
  }   
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADC_ped_CID"
type = TH2F_perEV
nbinsx = 4
lowx = -0.5
highx = 3.5
titlex = "CID"
nbinsy = 25
lowy = 0
highy = 50
titley = "ADC"

loop = <start_block>
  <fill_perEV> ( capid , adc );
<end_block>

<end_definition>
###########################################
<start_suite>
name = "AbsoluteTiming"
code = 3
null = "General"
TH1F_perEV = "T_abs_EV"
TH1F_perCH = "T_abs_CH"
TH2F_perEV = "QvsTS_EV" , "TDCvsTS_EV"
TH2F_perCH = "QvsTS_CH" , "TDCvsTS_CH"
<end_suite>
###########################################
<start_definition>
name = "T_abs_EV"
type = TH1F_perEV
nbinsx = 250
lowx = -0.5
highx = 249.5
titlex = "t (ns)"

loop_vars = <start_block>
  bool first_tdc_EV;
<end_block>

pre_loop = <start_block>
  global.first_tdc_EV = 1;
<end_block>

loop = <start_block>
  if ((global.first_tdc_EV == 1) && (le_tdc < 50)) {
    global.first_tdc_EV = 0;
    float t_abs = ((nTS-1)*25.0) + (le_tdc*0.5);
    if (global.corrupt == 0) {
      <fill_perEV> (t_abs);
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "T_abs_CH"
type = TH1F_perCH
nbinsx = 250
lowx = -0.5
highx = 249.5
titlex = "t (ns)"

loop_vars = <start_block>
  bool first_tdc_CH;
<end_block>

pre_loop = <start_block>
  global.first_tdc_CH = 1;
<end_block>

loop = <start_block>
  if ((global.first_tdc_CH == 1) && (le_tdc < 50)) {
    global.first_tdc_CH = 0;
    float t_abs = (nTS*25.0) + (le_tdc*0.5);
    if (global.corrupt == 0) {
      <fill_perCH> (t_abs);
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "TDCvsTS_CH"
type = TH2F_perCH
nbinsx = tTS
lowx = -0.5
highx = (float)tTS - (float)0.5
titlex = "TS"
nbinsy = 50
lowy = -0.5
highy = 49.5
titley = "TDC (0.5 ns)"

loop = <start_block>
  <fill_perCH> ( nTS, le_tdc );
<end_block>

<end_definition>
##########################################
<start_definition>
name = "TDCvsTS_EV"
type = TH2F_perEV
nbinsx = tTS
lowx = -0.5
highx = (float)tTS - (float)0.5
titlex = "TS"
nbinsy = 50
lowy = -0.5
highy = 49.5
titley = "TDC (0.5 ns)"

loop = <start_block>
  <fill_perEV> ( nTS, le_tdc );
<end_block>

<end_definition>
##########################################
<start_suite>
name = "PedScanner"
code = 4
null = "General"
TH1F_perCH = "DefaultPed_CH"
TH1F_perEV = "DefaultPed_EV"
TH2F_perCH = "ADCvsEV_CH" , "PedScan_CH" , "PedScan_q_CH" , "PedScan_qav_CH" , "PedScan_fixed_CH"
TH2F_perEV = "ADCvsEV_EV" , "PedScan_EV" , "PedScan_qav_EV"
<end_suite>
###########################################
<start_definition>
name = "DefaultPed_CH"
type = TH1F_perCH
nbinsx = 25
lowx = -0.5
highx = 24.5
titlex = "ADC"

loop = <start_block>
  if ( val == 38.0 ) {
    if (global.corrupt == 0) {
      <fill_perCH> ( adc );
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "DefaultPed_EV"
type = TH1F_perEV
nbinsx = 25
lowx = -0.5
highx = 24.5
titlex = "ADC"

loop = <start_block>
  if ( val == 38.0 ) {
    if (global.corrupt == 0) {
      <fill_perEV> ( adc );
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsEV_CH"
type = TH2F_perCH
nbinsx = 3300
lowx = -0.5
highx = 3299.5
titlex = "nEV"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "avADC"

pre_loop = <start_block>
  int tTS = digis.samples();
  int ADCsum = 0;
  for (int loopTS=0 ; loopTS < tTS ; loopTS++) {
    ADCsum += digis[loopTS].adc();
  }
  float avADC = (float)ADCsum / (float)tTS;
  if (global.corrupt == 0) {
    <fill_perCH> ( _event_num, avADC );
  }
<end_block>

<end_definition>
##########################################
<start_definition>
name = "ADCvsEV_EV"
type = TH2F_perEV
nbinsx = 3300
lowx = -0.5
highx = 3299.5
titlex = "nEV"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "avADC"

pre_loop = <start_block>
  int tTS_EV = digis.samples();
  int ADCsum_EV = 0;
  for (int loopTS=0 ; loopTS < tTS_EV ; loopTS++) {
    ADCsum_EV += digis[loopTS].adc();
  }
  float avADC_EV = (float)ADCsum_EV / (float)tTS_EV;
  if (global.corrupt == 0) {
    <fill_perEV> ( _event_num, avADC_EV );
  }
<end_block>

<end_definition>
##########################################
<start_definition>
name = "PedScan_EV"
type = TH2F_perEV
nbinsx = 63
lowx = -31.5
highx = 31.5
titlex = "PedestalDAC"
nbinsy = 64
lowy = -0.5
highy = 63.5
titley = "avADC"

pre_loop = <start_block>
  int tTS_scan_EV = digis.samples();
  int ADCsum_scan_EV = 0;
  for (int loopTS=0 ; loopTS < tTS_scan_EV ; loopTS++) {
    ADCsum_scan_EV += digis[loopTS].adc();
  }
  float avADC_scan_EV = (float)ADCsum_scan_EV / (float)tTS_scan_EV;
  if (global.corrupt == 0) {
    <fill_perEV> ( global.pdac2poff[(int)val] , avADC_scan_EV );
  }
<end_block>

<end_definition>
##########################################
<start_definition>
name = "PedScan_CH"
type = TH2F_perCH
nbinsx = 63
lowx = -31.5
highx = 31.5
titlex = "PedestalDAC"
nbinsy = 64
lowy = -0.5
highy = 63.5
titley = "avADC"

pre_loop = <start_block>
  int tTS_scan_CH = digis.samples();
  int ADCsum_scan_CH = 0;
  for (int loopTS=0 ; loopTS < tTS_scan_CH ; loopTS++) {
    ADCsum_scan_CH += digis[loopTS].adc();
  }
  float avADC_scan_CH = (float)ADCsum_scan_CH / (float)tTS_scan_CH;
  if (global.corrupt == 0) {
    <fill_perCH> ( global.pdac2poff[(int)val] , avADC_scan_CH );
  }
<end_block>

<end_definition>
##########################################
<start_definition>
name = "PedScan_fixed_CH"
type = TH2F_perCH
nbinsx = 63
lowx = -31.5
highx = 31.5
titlex = "Pedestal Offset (DAC)"
nbinsy = 32
lowy = -0.5
highy = 31.5
titley = "Pedestal (ADC)"

loop = <start_block>
  if (global.corrupt == 0) {
    <fill_perCH> ( global.pdac2poff[(int)val] , adc);
  }
<end_block>

<end_definition>
##########################################
<start_definition>
name = "PedScan_q_CH"
type = TH2F_perCH
nbinsx = 63
lowx = -31.5
highx = 31.5
titlex = "PedestalDAC"
nbinsy = 75
lowy = -0.5
highy = 74.5
titley = "Charge (fC)"

loop = <start_block>
  if (global.corrupt == 0) {
    <fill_perCH> ( global.pdac2poff[(int)val] , charge);
  }
<end_block>

<end_definition>
##########################################
<start_definition>
name = "PedScan_qav_CH"
type = TH2F_perCH
nbinsx = 63
lowx = -31.5
highx = 31.5
titlex = "PedestalDAC"
nbinsy = 75
lowy = -0.5
highy = 74.5
titley = "Charge (fC)"

pre_loop = <start_block>
  int tTS_scan_qav_CH = digis.samples();
  int qsum_scan_CH = 0;
  for (int loopTS=0 ; loopTS < tTS_scan_qav_CH ; loopTS++) {
    qsum_scan_CH += adc2fC_QIE10_refl[ digis[loopTS].adc() ] + 14.45;
  }
  float qav_scan_CH = (float)qsum_scan_CH / (float)tTS_scan_qav_CH;
  if (global.corrupt == 0) {
    <fill_perCH> ( global.pdac2poff[(int)val] , qav_scan_CH );
  }
<end_block>

<end_definition>
##########################################
<start_definition>
name = "PedScan_qav_EV"
type = TH2F_perEV
nbinsx = 63
lowx = -31.5
highx = 31.5
titlex = "PedestalDAC"
nbinsy = 75
lowy = -0.5
highy = 74.5
titley = "Charge (fC)"

pre_loop = <start_block>
  int tTS_scan_qav_EV = digis.samples();
  int qsum_scan_EV = 0;
  for (int loopTS=0 ; loopTS < tTS_scan_qav_EV ; loopTS++) {
    qsum_scan_EV += adc2fC_QIE10_refl[ digis[loopTS].adc() ] + 14.45;
  }
  float qav_scan_EV = (float)qsum_scan_EV / (float)tTS_scan_qav_EV;
  if (global.corrupt == 0) {
    <fill_perEV> ( global.pdac2poff[(int)val] , qav_scan_EV );
  }
<end_block>

<end_definition>
##########################################
<start_suite>
name = "PhaseScanner"
code = 5
null = "General"
TH2F_perCH = "phase_scan_CH"
TH2F_perEV = "phase_scan_EV"
<end_suite>
###########################################
<start_definition>
name = "phase_scan_EV"
type = TH2F_perEV
nbinsx = 100
lowx = -0.25
highx = 49.75
titlex = "phase (ns)"
nbinsy = 250
lowy = -0.5
highy = 249.5
titley = "TDC (ns)"

loop_vars = <start_block>
  bool first_tdc_scan_EV;
<end_block>

pre_loop = <start_block>
  global.first_tdc_scan_EV = 1;
<end_block>

loop = <start_block>
  if ((global.first_tdc_scan_EV == 1) && (le_tdc < 50)) {
    global.first_tdc_scan_EV = 0;
    float t_abs = ((nTS-1)*25.0) + (le_tdc*0.5);
    if ( val < 50 ) {
       <fill_perEV> (val/2.0,t_abs);
    }
    if ( val > 63 ) {
       <fill_perEV> ((val-14.0)/2.0,t_abs);
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "phase_scan_CH"
type = TH2F_perCH
nbinsx = 100
lowx = -0.25
highx = 49.75
titlex = "phase (ns)"
nbinsy = 250
lowy = -0.5
highy = 249.5
titley = "TDC (ns)"

loop_vars = <start_block>
  bool first_tdc_scan_CH;
<end_block>

pre_loop = <start_block>
  global.first_tdc_scan_CH = 1;
<end_block>

loop = <start_block>
  if ((global.first_tdc_scan_CH == 1) && (le_tdc < 50)) {
    global.first_tdc_scan_CH = 0;
    float t_abs = ((nTS-1)*25.0) + (le_tdc*0.5);
    if ( val < 50 ) {
       <fill_perCH> (val/2.0,t_abs);
    }
    if ( val > 63 ) {
       <fill_perCH> ((val-14.0)/2.0,t_abs);
    }
  }
<end_block>

<end_definition>
###########################################
<start_suite>
name = "ICIScanner"
code = 6
null = "General"
TH1F_perCH = "T_abs_CH" , "qratio_CH" , "ICI7_CH"
TH1F_perEV = "T_abs_EV" , "qratio_EV" , "ICI7_EV"
TH2F_perCH = "ici_scan_CH" , "qratio2_CH" , "pulse_ICI0_CH" , "pulse_ICI1_CH" , "pulse_ICI2_CH" , "pulse_ICI3_CH"  , "pulse_ICI4_CH" , "pulse_ICI5_CH" , "pulse_ICI6_CH" , "pulse_ICI7_CH" 
TH2F_perEV = "ici_scan_EV" , "qratio2_EV"
<end_suite>
###########################################
<start_definition>
name = "ici_scan_CH"
type = TH2F_perCH
nbinsx = 200
lowx = 0
highx = 10000
titlex = "ICI setting"
nbinsy = 200
lowy = 0
highy = 10000
titley = "ADC"

loop_vars = <start_block>
  float ici_ch[8] = {90, 180, 360, 720, 1440, 2880, 5760, 8640}; 
  float qsum_ici_ch;
<end_block>

pre_loop = <start_block>
  global.qsum_ici_ch = 0.0;
<end_block>

loop = <start_block>
  global.qsum_ici_ch += charge;
<end_block>

post_loop = <start_block>
  if (val < 8 ) {
    <fill_perCH> ( global.ici_ch[(int)val] , global.qsum_ici_ch );
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ici_scan_EV"
type = TH2F_perEV
nbinsx = 200
lowx = 0
highx = 10000
titlex = "ICI setting"
nbinsy = 200
lowy = 0
highy = 10000
titley = "ADC"

loop_vars = <start_block>
  float ici_ev[8] = {90, 180, 360, 720, 1440, 2880, 5760, 8640}; 
  float qsum_ici_ev;
<end_block>

pre_loop = <start_block>
  global.qsum_ici_ev = 0.0;
<end_block>

loop = <start_block>
  global.qsum_ici_ev += charge;
<end_block>

post_loop = <start_block>
  if (val < 8 ) {
    <fill_perEV> ( global.ici_ev[(int)val] , global.qsum_ici_ev );
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "qratio_CH"
type = TH1F_perCH
nbinsx = 100
lowx = 0
highx = 1
titlex = "Ratio Qmax/Qsum"

loop_vars = <start_block>
  float qsum_qr_ch;
  float qmax_qr_ch;
<end_block>

pre_loop = <start_block>
  global.qsum_qr_ch = 0.0;
  global.qmax_qr_ch = 0.0;
<end_block>

loop = <start_block>
  global.qsum_qr_ch += charge;
  if ( charge > global.qmax_qr_ch ) {
    global.qmax_qr_ch = charge;
  }
<end_block>

post_loop = <start_block>
  <fill_perCH> ( global.qmax_qr_ch / global.qsum_qr_ch );
<end_block>

<end_definition>
###########################################
<start_definition>
name = "qratio_EV"
type = TH1F_perEV
nbinsx = 100
lowx = 0
highx = 1
titlex = "Ratio Qmax/Qsum"

loop_vars = <start_block>
  float qsum_qr_ev;
  float qmax_qr_ev;
<end_block>

pre_loop = <start_block>
  global.qsum_qr_ev = 0.0;
  global.qmax_qr_ev = 0.0;
<end_block>

loop = <start_block>
  global.qsum_qr_ev += charge;
  if ( charge > global.qmax_qr_ev ) {
    global.qmax_qr_ev = charge;
  }
<end_block>

post_loop = <start_block>
  <fill_perEV> ( global.qmax_qr_ev / global.qsum_qr_ev );
<end_block>

<end_definition>
###########################################
<start_definition>
name = "qratio2_CH"
type = TH2F_perCH
nbinsx = 8
lowx = -0.5
highx = 7.5
titlex = "ICI setting"
nbinsy = 100
lowy = 0
highy = 1
titley = "Ratio Qmax/Qsum"

loop_vars = <start_block>
  float qsum_qr2_ch;
  float qmax_qr2_ch;
<end_block>

pre_loop = <start_block>
  global.qsum_qr2_ch = 0.0;
  global.qmax_qr2_ch = 0.0;
<end_block>

loop = <start_block>
  global.qsum_qr2_ch += charge;
  if ( charge > global.qmax_qr2_ch ) {
    global.qmax_qr2_ch = charge;
  }
<end_block>

post_loop = <start_block>
  <fill_perCH> ( val , global.qmax_qr2_ch / global.qsum_qr2_ch );
<end_block>

<end_definition>
###########################################
<start_definition>
name = "qratio2_EV"
type = TH2F_perEV
nbinsx = 8
lowx = -0.5
highx = 7.5
titlex = "ICI setting"
nbinsy = 100
lowy = 0
highy = 1
titley = "Ratio Qmax/Qsum"

loop_vars = <start_block>
  float qsum_qr2_ev;
  float qmax_qr2_ev;
<end_block>

pre_loop = <start_block>
  global.qsum_qr2_ev = 0.0;
  global.qmax_qr2_ev = 0.0;
<end_block>

loop = <start_block>
  global.qsum_qr2_ev += charge;
  if ( charge > global.qmax_qr2_ev ) {
    global.qmax_qr2_ev = charge;
  }
<end_block>

post_loop = <start_block>
  <fill_perEV> ( val , global.qmax_qr2_ev / global.qsum_qr2_ev );
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ICI7_CH"
type = TH1F_perCH
nbinsx = 100
lowx = 0
highx = 1
titlex = "Ratio Qmax/Qsum"

loop_vars = <start_block>
  float qsum_ici7_ch;
  float qmax_ici7_ch;
<end_block>

pre_loop = <start_block>
  global.qsum_ici7_ch = 0;
  global.qmax_ici7_ch = 0;
<end_block>

loop = <start_block>
  global.qsum_ici7_ch += charge;
  if (charge > global.qmax_ici7_ch ) {
    global.qmax_ici7_ch = charge;
  }
<end_block>

post_loop = <start_block>
  if ( val == 7 ) {
    <fill_perCH> ( global.qmax_ici7_ch / global.qsum_ici7_ch );
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ICI7_EV"
type = TH1F_perEV
nbinsx = 100
lowx = 0
highx = 1
titlex = "Ratio Qmax/Qsum"

loop_vars = <start_block>
  float qsum_ici7_ev;
  float qmax_ici7_ev;
<end_block>

pre_loop = <start_block>
  global.qsum_ici7_ev = 0;
  global.qmax_ici7_ev = 0;
<end_block>

loop = <start_block>
  global.qsum_ici7_ev += charge;
  if (charge > global.qmax_ici7_ev ) {
    global.qmax_ici7_ev = charge;
  }
<end_block>

loop = <start_block>
  if ( val == 7 ) {
    <fill_perEV> ( global.qmax_ici7_ev / global.qsum_ici7_ev );
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "pulse_ICI0_CH"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = 0
highy = 10000
titley = "Q (fC)"

loop = <start_block>
  if ( val == 0 ) {
    <fill_perCH> ( nTS, charge );
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "pulse_ICI1_CH"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = 0
highy = 10000
titley = "Q (fC)"

loop = <start_block>
  if ( val == 1 ) {
    <fill_perCH> ( nTS, charge );
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "pulse_ICI2_CH"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = 0
highy = 10000
titley = "Q (fC)"

loop = <start_block>
  if ( val == 2 ) {
    <fill_perCH> ( nTS, charge );
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "pulse_ICI3_CH"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = 0
highy = 10000
titley = "Q (fC)"

loop = <start_block>
  if ( val == 3 ) {
    <fill_perCH> ( nTS, charge );
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "pulse_ICI4_CH"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = 0
highy = 10000
titley = "Q (fC)"

loop = <start_block>
  if ( val == 4 ) {
    <fill_perCH> ( nTS, charge );
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "pulse_ICI5_CH"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = 0
highy = 10000
titley = "Q (fC)"

loop = <start_block>
  if ( val == 5 ) {
    <fill_perCH> ( nTS, charge );
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "pulse_ICI6_CH"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = 0
highy = 10000
titley = "Q (fC)"

loop = <start_block>
  if ( val == 6 ) {
    <fill_perCH> ( nTS, charge );
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "pulse_ICI7_CH"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = 0
highy = 10000
titley = "Q (fC)"

loop = <start_block>
  if ( val == 7 ) {
    <fill_perCH> ( nTS, charge );
  }
<end_block>

<end_definition>
###########################################
<start_suite>
name = "LED_Vb_Scan"
code = 7
null = "General"
TH2F_perCH = "Qsum_vs_Vb_CH" , "qratio_vb_CH" , "TDCpulse_vb_CH" , "qratio2_vb_CH" , "QvsTS_2.5V"
TH2F_perEV = "Qsum_vs_Vb_EV" , "qratio_vb_EV" , "TDCpulse_vb_EV" , "qratio2_vb_EV"
TProfile = "qratio_vb_PR" , "Qsum_vs_Vb_PR" , "qratio2_vb_PR" , "qratio3_vb_PR"
<end_suite>
###########################################
<start_definition>
name = "Qsum_vs_Vb_CH"
type = TH2F_perCH
nbinsx = 26
lowx = -0.05
highx = 2.55
titlex = "Vb"
nbinsy = 200
lowy = 0
highy = 30000
titley = "Q (fC)"

loop_vars = <start_block>
  float qsum_vb_CH;
<end_block>

pre_loop = <start_block>
  global.qsum_vb_CH = 0;
<end_block>

loop = <start_block>
  global.qsum_vb_CH += charge;
<end_block>

post_loop = <start_block>
  if ( global.corrupt == 0 ) {
    <fill_perCH> ( val , global.qsum_vb_CH );
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "Qsum_vs_Vb_PR"
type = TProfile
nbinsx = 26
lowx = -0.05
highx = 2.55
titlex = "Vb"
nbinsy = 200
lowy = 0
highy = 30000
titley = "Q (fC)"

loop_vars = <start_block>
  float qsum_vb_PR;
<end_block>

pre_loop = <start_block>
  global.qsum_vb_PR = 0;
<end_block>

loop = <start_block>
  global.qsum_vb_PR += charge;
<end_block>

post_loop = <start_block>
  if ( global.corrupt == 0 ) {
    <fill_perCH> ( val , global.qsum_vb_PR );
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "Qsum_vs_Vb_EV"
type = TH2F_perEV
nbinsx = 26
lowx = -0.05
highx = 2.55
titlex = "Vb"
nbinsy = 200
lowy = 0
highy = 30000
titley = "Q (fC)"

loop_vars = <start_block>
  float qsum_vb_EV;
<end_block>

pre_loop = <start_block>
  global.qsum_vb_EV = 0;
<end_block>

loop = <start_block>
  global.qsum_vb_EV += charge;
<end_block>

post_loop = <start_block>
  if ( global.corrupt == 0 ) {
    <fill_perEV> ( val , global.qsum_vb_EV );
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "qratio_vb_CH"
type = TH2F_perCH
nbinsx = 26
lowx = -0.05
highx = 2.55
titlex = "Bias Voltage"
nbinsy = 100
lowy = 0
highy = 1
titley = "Ratio Qmax/Qsum"

loop_vars = <start_block>
  float qsum_qr_vb_ch;
  float qmax_qr_vb_ch;
<end_block>

pre_loop = <start_block>
  global.qsum_qr_vb_ch = 0.0;
  global.qmax_qr_vb_ch = 0.0;
<end_block>

loop = <start_block>
  global.qsum_qr_vb_ch += charge;
  if ( charge > global.qmax_qr_vb_ch ) {
    global.qmax_qr_vb_ch = charge;
  }
<end_block>

post_loop = <start_block>
  <fill_perCH> ( val , global.qmax_qr_vb_ch / global.qsum_qr_vb_ch );
<end_block>

<end_definition>
###########################################
<start_definition>
name = "qratio_vb_EV"
type = TH2F_perEV
nbinsx = 26
lowx = -0.05
highx = 2.55
titlex = "Bias Voltage"
nbinsy = 100
lowy = 0
highy = 1
titley = "Ratio Qmax/Qsum"

loop_vars = <start_block>
  float qsum_qr_vb_ev;
  float qmax_qr_vb_ev;
<end_block>

pre_loop = <start_block>
  global.qsum_qr_vb_ev = 0.0;
  global.qmax_qr_vb_ev = 0.0;
<end_block>

loop = <start_block>
  global.qsum_qr_vb_ev += charge;
  if ( charge > global.qmax_qr_vb_ev ) {
    global.qmax_qr_vb_ev = charge;
  }
<end_block>

post_loop = <start_block>
  <fill_perEV> ( val , global.qmax_qr_vb_ev / global.qsum_qr_vb_ev );
<end_block>

<end_definition>
###########################################
<start_definition>
name = "qratio_vb_PR"
type = TProfile
nbinsx = 26
lowx = -0.05
highx = 2.55
titlex = "Bias Voltage"
nbinsy = 100
lowy = 0
highy = 1
titley = "Ratio Qmax/Qsum"

loop_vars = <start_block>
  float qsum_qr_vb_pr;
  float qmax_qr_vb_pr;
<end_block>

pre_loop = <start_block>
  global.qsum_qr_vb_pr = 0.0;
  global.qmax_qr_vb_pr = 0.0;
<end_block>

loop = <start_block>
  global.qsum_qr_vb_pr += charge;
  if ( charge > global.qmax_qr_vb_pr ) {
    global.qmax_qr_vb_pr = charge;
  }
<end_block>

post_loop = <start_block>
  <fill_perCH> ( val , global.qmax_qr_vb_pr / global.qsum_qr_vb_pr );
<end_block>

<end_definition>
###########################################
<start_definition>
name = "qratio2_vb_CH"
type = TH2F_perCH
nbinsx = 26
lowx = -0.05
highx = 2.55
titlex = "Bias Voltage"
nbinsy = 100
lowy = 0
highy = 1
titley = "Ratio Qmax/Qsum"

loop_vars = <start_block>
  float qsum_qr2_vb_ch;
  float qmax_qr2_vb_ch;
  int ts_max_ch;
<end_block>

pre_loop = <start_block>
  global.qsum_qr2_vb_ch = 0.0;
  global.qmax_qr2_vb_ch = 0.0;
  global.ts_max_ch = 0;
<end_block>

loop = <start_block>
  global.qsum_qr2_vb_ch += charge;
  if ( charge > global.qmax_qr2_vb_ch ) {
    global.qmax_qr2_vb_ch = charge;
    global.ts_max_ch = nTS;
  }
<end_block>

post_loop = <start_block>
  float max2_ch = 0;
  if (global.ts_max_ch == 9) {
    max2_ch = adc2fC_QIE10_refl[ digis[global.ts_max_ch].adc() ] + 14.45;
  }
  else {
    max2_ch = adc2fC_QIE10_refl[ digis[global.ts_max_ch].adc() ] + 14.45 + adc2fC_QIE10_refl[ digis[global.ts_max_ch+1].adc() ] + 14.45;
  }
  <fill_perCH> ( val , (max2_ch) / global.qsum_qr2_vb_ch );
<end_block>

<end_definition>
###########################################
<start_definition>
name = "qratio2_vb_EV"
type = TH2F_perEV
nbinsx = 26
lowx = -0.05
highx = 2.55
titlex = "Bias Voltage"
nbinsy = 100
lowy = 0
highy = 1
titley = "Ratio Qmax/Qsum"

loop_vars = <start_block>
  float qsum_qr2_vb_ev;
  float qmax_qr2_vb_ev;
  int ts_max_ev;
<end_block>

pre_loop = <start_block>
  global.qsum_qr2_vb_ev = 0.0;
  global.qmax_qr2_vb_ev = 0.0;
  global.ts_max_ev = 0;
<end_block>

loop = <start_block>
  global.qsum_qr2_vb_ev += charge;
  if ( charge > global.qmax_qr2_vb_ev ) {
    global.qmax_qr2_vb_ev = charge;
    global.ts_max_ev = nTS;
  }
<end_block>

post_loop = <start_block>
  float max2_ev = 0;
  if (global.ts_max_ev == 9) {
    max2_ev = adc2fC_QIE10_refl[ digis[global.ts_max_ev].adc() ] + 14.45;
  }
  else {
    max2_ev = adc2fC_QIE10_refl[ digis[global.ts_max_ev].adc() ] + 14.45 + adc2fC_QIE10_refl[ digis[global.ts_max_ev+1].adc() ] + 14.45;
  }
  <fill_perEV> ( val , (max2_ev) / global.qsum_qr2_vb_ev );
<end_block>

<end_definition>
###########################################
<start_definition>
name = "qratio2_vb_PR"
type = TProfile
nbinsx = 26
lowx = -0.05
highx = 2.55
titlex = "Bias Voltage"
nbinsy = 100
lowy = 0
highy = 1
titley = "Ratio Qmax/Qsum"

loop_vars = <start_block>
  float qsum_qr2_vb_pr;
  float qmax_qr2_vb_pr;
  int ts_max_pr;
<end_block>

pre_loop = <start_block>
  global.qsum_qr2_vb_pr = 0.0;
  global.qmax_qr2_vb_pr = 0.0;
  global.ts_max_pr = 0;
<end_block>

loop = <start_block>
  global.qsum_qr2_vb_pr += charge;
  if ( charge > global.qmax_qr2_vb_pr ) {
    global.qmax_qr2_vb_pr = charge;
    global.ts_max_pr = nTS;
  }
<end_block>

post_loop = <start_block>
  float max2_pr = 0;
  if (global.ts_max_pr == 9) {
    max2_pr = adc2fC_QIE10_refl[ digis[global.ts_max_pr].adc() ] + 14.45;
  }
  else {
    max2_pr = adc2fC_QIE10_refl[ digis[global.ts_max_pr].adc() ] + 14.45 + adc2fC_QIE10_refl[ digis[global.ts_max_pr+1].adc() ] + 14.45;
  }
  <fill_perCH> ( val , (max2_pr) / global.qsum_qr2_vb_pr );
<end_block>

<end_definition>
###########################################
<start_definition>
name = "TDCpulse_vb_CH"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 64
lowy = -0.5
highy = 63.5
titley = "TDC"

loop = <start_block>
  <fill_perCH> ( nTS , le_tdc ); 
<end_block>

<end_definition>
###########################################
<start_definition>
name = "TDCpulse_vb_EV"
type = TH2F_peEV
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 64
lowy = -0.5
highy = 63.5
titley = "TDC"

loop = <start_block>
  <fill_perEV> ( nTS , le_tdc ); 
<end_block>

<end_definition>
###########################################
<start_definition>
name = "qratio3_vb_PR"
type = TProfile
nbinsx = 26
lowx = -0.05
highx = 2.55
titlex = "Bias Voltage"
nbinsy = 100
lowy = 0
highy = 1
titley = "Ratio Qmax/Qsum"

loop_vars = <start_block>
  float qsum_qr3_vb_ch;
  float qmax_qr3_vb_ch;
  int ts_max3_ch;
<end_block>

pre_loop = <start_block>
  global.qsum_qr3_vb_ch = 0.0;
  global.qmax_qr3_vb_ch = 0.0;
  global.ts_max3_ch = 0;
<end_block>

loop = <start_block>
  global.qsum_qr3_vb_ch += charge;
  if ( charge > global.qmax_qr3_vb_ch ) {
    global.qmax_qr3_vb_ch = charge;
    global.ts_max3_ch = nTS;
  }
<end_block>

post_loop = <start_block>
  float max3_ch = 0;
  if ( (global.ts_max3_ch != 9) && (global.ts_max3_ch != 0) ) {
    max3_ch = adc2fC_QIE10_refl[ digis[global.ts_max3_ch].adc() ] + 14.45 + adc2fC_QIE10_refl[ digis[global.ts_max3_ch+1].adc() ] + 14.45 + adc2fC_QIE10_refl[ digis[global.ts_max3_ch-1].adc() ] + 14.45;
    <fill_perCH> ( val , (max3_ch) / global.qsum_qr3_vb_ch );
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "QvsTS_2.5V"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = 0
highy = 40000
titley = "ADC"

loop = <start_block>
  if ( val == 2.5 ) {
    <fill_perCH> (nTS,charge);
  }
<end_block>

<end_definition>
###########################################
<start_suite>
name = "RinSel_Scan"
code = 8
null = "General"
TH2F_perCH = "qr2_vs_rin_CH" , "ADCvsTS_Rin0" , "ADCvsTS_Rin1" , "ADCvsTS_Rin2" , "ADCvsTS_Rin3" , "ADCvsTS_Rin4" , "ADCvsTS_Rin5" , "ADCvsTS_Rin6" , "ADCvsTS_Rin7" , "ADCvsTS_Rin8" , "ADCvsTS_Rin9" , "ADCvsTS_Rin10" , "ADCvsTS_Rin11" , "ADCvsTS_Rin12" , "ADCvsTS_Rin13" , "ADCvsTS_Rin14" , "ADCvsTS_Rin15"
TProfile = "qr2_vs_rin_PR"
<end_suite>
###########################################
<start_definition>
name = "qr2_vs_rin_CH"
type = TH2F_perCH
nbinsx = 16
lowx = -0.5
highx = 15.5
titlex = "RinSel Value"
nbinsy = 100
lowy = 0
highy = 1
titley = "(Qmax+Qnext)/Qsum"

loop_vars = <start_block>
  float qsum_qr2_rin_ch;
  float qmax_qr2_rin_ch;
  int ts_max_rin_ch;
<end_block>

pre_loop = <start_block>
  global.qsum_qr2_rin_ch = 0.0;
  global.qmax_qr2_rin_ch = 0.0;
  global.ts_max_rin_ch = 0;
<end_block>

loop = <start_block>
  global.qsum_qr2_rin_ch += charge;
  if ( charge > global.qmax_qr2_rin_ch ) {
    global.qmax_qr2_rin_ch = charge;
    global.ts_max_rin_ch = nTS;
  }
<end_block>

post_loop = <start_block>
  float max2_rin_ch = 0;
  if (global.ts_max_rin_ch == 9) {
    max2_rin_ch = adc2fC_QIE10_refl[ digis[global.ts_max_rin_ch].adc() ] + 14.45;
  }
  else {
    max2_rin_ch = adc2fC_QIE10_refl[ digis[global.ts_max_rin_ch].adc() ] + 14.45 + adc2fC_QIE10_refl[ digis[global.ts_max_rin_ch+1].adc() ] + 14.45;
  }
  <fill_perCH> ( val , (max2_rin_ch) / global.qsum_qr2_rin_ch );
<end_block>

<end_definition>
###########################################
<start_definition>
name = "qr2_vs_rin_PR"
type = TProfile
nbinsx = 16
lowx = -0.5
highx = 15.5
titlex = "RinSel Value"
nbinsy = 100
lowy = 0
highy = 1
titley = "(Qmax+Qnext)/Qsum"

loop_vars = <start_block>
  float qsum_qr2_rin_pr;
  float qmax_qr2_rin_pr;
  int ts_max_rin_pr;
<end_block>

pre_loop = <start_block>
  global.qsum_qr2_rin_pr = 0.0;
  global.qmax_qr2_rin_pr = 0.0;
  global.ts_max_rin_pr = 0;
<end_block>

loop = <start_block>
  global.qsum_qr2_rin_pr += charge;
  if ( charge > global.qmax_qr2_rin_pr ) {
    global.qmax_qr2_rin_pr = charge;
    global.ts_max_rin_pr = nTS;
  }
<end_block>

post_loop = <start_block>
  float max2_rin_pr = 0;
  if (global.ts_max_rin_pr == 9) {
    max2_rin_pr = adc2fC_QIE10_refl[ digis[global.ts_max_rin_pr].adc() ] + 14.45;
  }
  else {
    max2_rin_pr = adc2fC_QIE10_refl[ digis[global.ts_max_rin_pr].adc() ] + 14.45 + adc2fC_QIE10_refl[ digis[global.ts_max_rin_pr+1].adc() ] + 14.45;
  }
  <fill_perCH> ( val , (max2_rin_pr) / global.qsum_qr2_rin_pr );
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_Rin0"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val == 0 ) {
    <fill_perCH> (nTS,adc);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_Rin1"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val == 1 ) {
    <fill_perCH> (nTS,adc);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_Rin2"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val == 2 ) {
    <fill_perCH> (nTS,adc);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_Rin3"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val == 3 ) {
    <fill_perCH> (nTS,adc);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_Rin4"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val == 4 ) {
    <fill_perCH> (nTS,adc);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_Rin5"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val == 5 ) {
    <fill_perCH> (nTS,adc);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_Rin6"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val == 6 ) {
    <fill_perCH> (nTS,adc);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_Rin7"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val == 7 ) {
    <fill_perCH> (nTS,adc);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_Rin8"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val == 8 ) {
    <fill_perCH> (nTS,adc);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_Rin9"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val == 9 ) {
    <fill_perCH> (nTS,adc);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_Rin10"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val == 10 ) {
    <fill_perCH> (nTS,adc);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_Rin11"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val == 11 ) {
    <fill_perCH> (nTS,adc);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_Rin12"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val == 12 ) {
    <fill_perCH> (nTS,adc);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_Rin13"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val == 13 ) {
    <fill_perCH> (nTS,adc);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_Rin14"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val == 14 ) {
    <fill_perCH> (nTS,adc);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_Rin15"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val == 15 ) {
    <fill_perCH> (nTS,adc);
  }
<end_block>

<end_definition>
###########################################
